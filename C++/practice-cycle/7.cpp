/* 从键盘输入一个角度值y（计算时需要将角度值转换成弧度值：x=y*PI/180），PI的取值为3.14159265。求cos(x)和sin(x)的近似值，要求截断误差小于10-7，
即通项式的值小于10-7时停止计算。近似计算公式如下：
𝒄𝒐𝒔(𝒙)=𝟏−𝒙^𝟐/𝟐!+𝒙^𝟒/𝟒!−𝒙^𝟔/𝟔!+⋅⋅⋅
sin⁡(𝑥)=𝑥−𝑥^3/3!+𝑥^5/5! −  𝑥^7/7!+…

编程要求：
1、请在注释信息Program和End之间完成代码，程序其余位置的代码不要改动！
2、编程时，只能使用已定义的变量
3、程序只能使用规定的结构，本题要求循环用while或for语句实现。

【输出】
请输入角度值：0               请输入角度值：30           请输入角度值：45             请输入角度值：60
cosx(0)=1                     cosx(30)=0.866025          cosx(45)=0.707107            cosx(60)=0.5
sinx(0)=0                     sinx(30)=0.5              sinx(45)=0.707107            sinx(60)=0.866025
*/

#include <iostream>
using namespace std;
int main()
{
	const float PI = 3.1415926;
	float x, y, cosx = 0, sinx = 0, term_cosx = 1, term_sinx;
	int sign = 1, n = 1;
	cout << "请输入角度值：";
	cin >> y;
	x = y * PI / 180;
	/*************************Program***************************/
	cosx = 1; // 初始化余弦值，作为泰勒展开首项
	for (; term_cosx > 10e-7; n++) {
		sign = -sign; // 改变符号，实现正负项的交替相加
		term_cosx = term_cosx * x * x / ((2 * n - 1) * 2 * n); // 计算新项
		cosx += sign * term_cosx; // 计算余弦值
	}
	/*************************End***************************/
	cout << "cos(" << y << ")=" << cosx << endl;
	n = 1;
	sign = 1;                    //重新给n和sign赋初值
	term_sinx = x;               //注意通项的初值
	/*************************Program***************************/
	sinx = x; // 初始化余弦值，作为泰勒展开首项
	for (; term_sinx > 10e-7; n++) {
		sign = -sign; // 改变符号，实现正负项的交替相加
		term_sinx = term_sinx * x * x / ((2 * n) * (2 * n + 1)); // 计算新项
		sinx += sign * term_sinx; // 计算正弦值
	}
	/*************************End***************************/
	cout << "sin(" << y << ")=" << sinx << endl;
	return 0;
}