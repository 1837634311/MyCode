/*  求N阶（不超过10）方阵的主对角线和次对角线上所有元素之和（奇数阶方阵两条对角线上重合的元素不重复计算）。
求求N阶（不超过10）方阵最外层4条边线上的所有元素之和（4个顶点元素不重复累加）。方阵的阶数从键盘输入。

【输出】
请输入方阵的阶数:3                                    请输入方阵的阶数:4
请输入3阶方阵的所有元素：1 2 3 4 5 6 7 8 9             请输入3阶方阵的所有元素：1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
3阶方阵为：                                            4阶方阵为：
1   2   3                                              1   2   3   4
4   5   6                                              5   6   7   8
7   8   9                                              9  10  11  12
方阵对角线的所有元素之和为：25                           13  14  15  16
矩阵边线上所有元素之和为：40                           方阵对角线的所有元素之和为：68
                                                     矩阵边线上所有元素之和为：102
*/

#include <iostream>
#include <iomanip>
using namespace std;
int main() {
    const int N = 10;
    int a[N][N], n, i, j, sum = 0;
    cout << "请输入方阵的阶数:";
    cin >> n;
    cout << "请输入" << n << "阶方阵的所有元素：";
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            cin >> a[i][j];
    cout << n << "阶方阵为：" << endl;
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++)
            cout << setw(4) << a[i][j];
        cout << endl;
    }
    /*************Program**************/
    for (i = 0; i < n; i++)
        sum += a[i][i] + a[i][n - 1 - i];
    if (n % 2)
        sum -= a[n / 2][n / 2];
    /****************End***************/
    cout << "方阵对角线的所有元素之和为：" << sum << endl;

    sum = 0;                          //重新初始化求和变量
    /*************Program**************/
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            if ((i == 0 || i == n - 1) || (j == 0 || j == n - 1))
                sum += a[i][j];
    /****************End***************/
    cout << "矩阵边线上所有元素之和为：" << sum << endl;

    return 0;
}
